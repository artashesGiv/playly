import { Justify } from './types';
import { Ref } from 'vue';
export declare const useSectionContext: <T extends {
    justify?: Ref<Justify>;
} | null | undefined = {
    justify?: Ref<Justify>;
}>(fallback?: T | undefined) => T extends null ? {
    justify?: Ref<Justify>;
} | null : {
    justify?: Ref<Justify>;
}, injectSectionContext: (contextValue: {
    justify?: Ref<Justify>;
}) => {
    justify?: Ref<Justify>;
};
