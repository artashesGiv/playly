import { ScanQrPopupParams, WebAppCallback } from '../sdk';
import { BotApiPrevVersion, BotApiVersion, BotApiVersionRange, LATEST_VERSION, Merge, VersionedReturnType } from '../types';
import { onQrTextReceived, onScanQrPopupClosed } from '../events';
type v64 = ReturnType<typeof useQrScanner64>;
type v77 = ReturnType<typeof useQrScanner77>;
export type Schema = {
    '6.0': Merge<Partial<v64 & v77>, object>;
    '6.4': Merge<Schema['6.0'], v64>;
    '7.7': Merge<Schema['6.4'], v77>;
};
export type QrScanner = (Schema['6.0'] & {
    version: BotApiVersionRange<'6.0', BotApiPrevVersion<'6.4'>>;
}) | (Schema['6.4'] & {
    version: BotApiVersionRange<'6.4', BotApiPrevVersion<'7.7'>>;
}) | (Schema['7.7'] & {
    version: BotApiVersionRange<'7.7', LATEST_VERSION>;
});
declare function useQrScanner64(): {
    show: {
        (params: ScanQrPopupParams): ReturnType<(params: ScanQrPopupParams) => Promise<string>>;
        (params: ScanQrPopupParams, callback?: WebAppCallback["showScanQrPopup"]): void;
    };
    close: () => void;
    onScan: typeof onQrTextReceived;
};
declare function useQrScanner77(): {
    onClose: typeof onScanQrPopupClosed;
};
export declare function useQrScanner<Version extends BotApiVersion>(baseVersion: Version): VersionedReturnType<QrScanner, Version, keyof Schema>;
export {};
