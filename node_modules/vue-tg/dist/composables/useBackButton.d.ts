import { BotApiPrevVersion, BotApiVersion, BotApiVersionRange, LATEST_VERSION, Merge, VersionedReturnType } from '../types';
import { onBackButtonClicked } from '../events';
type v60 = ReturnType<typeof useBackButton60>;
type v61 = ReturnType<typeof useBackButton61>;
export type Schema = {
    '6.0': Merge<Partial<v61>, v60>;
    '6.1': Merge<Schema['6.0'], v61>;
};
export type BackButton = (Schema['6.0'] & {
    version: BotApiVersionRange<'6.0', BotApiPrevVersion<'6.1'>>;
}) | (Schema['6.1'] & {
    version: BotApiVersionRange<'6.1', LATEST_VERSION>;
});
declare function useBackButton60(): {
    isVisible: Readonly<import('vue').Ref<boolean, boolean>>;
};
declare function useBackButton61(): {
    isVisible: import('vue').WritableComputedRef<boolean, boolean>;
    show: () => void;
    hide: () => void;
    onClick: typeof onBackButtonClicked;
};
export declare function useBackButton<Version extends BotApiVersion>(baseVersion: Version): VersionedReturnType<BackButton, Version, keyof Schema>;
export {};
