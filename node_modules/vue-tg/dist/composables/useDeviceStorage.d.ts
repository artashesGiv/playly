import { DeviceStorageCallback } from '../sdk/device-storage';
import { BotApiPrevVersion, BotApiVersion, BotApiVersionRange, LATEST_VERSION, Merge, VersionedReturnType } from '../types';
type v90 = ReturnType<typeof useDeviceStorage90>;
export type Schema = {
    '6.0': Merge<Partial<v90>, object>;
    '9.0': Merge<Schema['6.0'], v90>;
};
export type DeviceStorage = (Schema['6.0'] & {
    version: BotApiVersionRange<'6.0', BotApiPrevVersion<'9.0'>>;
}) | (Schema['9.0'] & {
    version: BotApiVersionRange<'9.0', LATEST_VERSION>;
});
declare function useDeviceStorage90(): {
    setItem: {
        (key: string, value: string): ReturnType<(key: string, value: string) => Promise<true>>;
        (key: string, value: string, callback?: DeviceStorageCallback["setItem"]): void;
    };
    getItem: {
        (key: string): ReturnType<(key: string) => Promise<string>>;
        (key: string, callback?: DeviceStorageCallback["getItem"]): void;
    };
    removeItem: {
        (key: string): ReturnType<(key: string) => Promise<true>>;
        (key: string, callback?: DeviceStorageCallback["removeItem"]): void;
    };
    clear: {
        (): ReturnType<() => Promise<string | null>>;
        (callback?: DeviceStorageCallback["clear"]): void;
    };
};
export declare function useDeviceStorage<Version extends BotApiVersion>(baseVersion: Version): VersionedReturnType<DeviceStorage, Version, keyof Schema>;
export {};
