import { WebAppCallback } from '../sdk';
import { BotApiPrevVersion, BotApiVersion, BotApiVersionRange, LATEST_VERSION, Merge, VersionedReturnType } from '../types';
import { onHomeScreenAdded, onHomeScreenChecked } from '../events';
type v80 = ReturnType<typeof useHomeScreen80>;
export type Schema = {
    '6.0': Merge<Partial<v80>, object>;
    '8.0': Merge<Schema['6.0'], v80>;
};
export type HomeScreen = (Schema['6.0'] & {
    version: BotApiVersionRange<'6.0', BotApiPrevVersion<'8.0'>>;
}) | (Schema['8.0'] & {
    version: BotApiVersionRange<'8.0', LATEST_VERSION>;
});
declare function useHomeScreen80(): {
    addShortcut: () => void;
    checkShortcutStatus: {
        (): ReturnType<() => Promise<"unsupported" | "unknown" | "added" | "missed">>;
        (callback?: WebAppCallback["checkHomeScreenStatus"]): void;
    };
    onShortcutAdd: typeof onHomeScreenAdded;
    onShortcutCheck: typeof onHomeScreenChecked;
};
export declare function useHomeScreen<Version extends BotApiVersion>(baseVersion: Version): VersionedReturnType<HomeScreen, Version, keyof Schema>;
export {};
