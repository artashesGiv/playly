import { BotApiPrevVersion, BotApiVersion, BotApiVersionRange, LATEST_VERSION, Merge, VersionedReturnType } from '../types';
export type v61 = ReturnType<typeof useHapticFeedback61>;
export type Schema = {
    '6.0': Merge<Partial<v61>, object>;
    '6.1': Merge<Schema['6.0'], v61>;
};
export type HapticFeedback = (Schema['6.0'] & {
    version: BotApiVersionRange<'6.0', BotApiPrevVersion<'6.1'>>;
}) | (Schema['6.1'] & {
    version: BotApiVersionRange<'6.1', LATEST_VERSION>;
});
declare function useHapticFeedback61(): {
    impactOccurred: (style: "light" | "medium" | "heavy" | "rigid" | "soft") => void;
    notificationOccurred: (type: "error" | "success" | "warning") => void;
    selectionChanged: () => void;
};
export declare function useHapticFeedback<Version extends BotApiVersion>(baseVersion: Version): VersionedReturnType<HapticFeedback, Version, keyof Schema>;
export {};
