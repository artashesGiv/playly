import { BotApiPrevVersion, BotApiVersion, BotApiVersionRange, LATEST_VERSION, Merge, VersionedReturnType } from '../types';
import { onSettingsButtonClicked } from '../events';
type v60 = ReturnType<typeof useSettingsButton60>;
type v70 = ReturnType<typeof useSettingsButton70>;
export type Schema = {
    '6.0': Merge<Partial<v70>, v60>;
    '7.0': Merge<Schema['6.0'], v70>;
};
export type SettingsButton = (Schema['6.0'] & {
    version: BotApiVersionRange<'6.0', BotApiPrevVersion<'7.0'>>;
}) | (Schema['7.0'] & {
    version: BotApiVersionRange<'7.0', LATEST_VERSION>;
});
declare function useSettingsButton60(): {
    isVisible: Readonly<import('vue').Ref<boolean, boolean>>;
};
declare function useSettingsButton70(): {
    isVisible: import('vue').WritableComputedRef<boolean, boolean>;
    show: () => void;
    hide: () => void;
    onClick: typeof onSettingsButtonClicked;
};
export declare function useSettingsButton<Version extends BotApiVersion>(baseVersion: Version): VersionedReturnType<SettingsButton, Version, keyof Schema>;
export {};
