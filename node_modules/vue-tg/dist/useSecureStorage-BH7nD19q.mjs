import { getCurrentInstance as te, onMounted as de, onUnmounted as fe, effectScope as Se, ref as c, computed as h, readonly as u } from "vue";
function b() {
  var e;
  if (!("Telegram" in window))
    throw new Error("Telegram SDK not found. Make sure https://telegram.org/js/telegram-web-app.js script is installed.");
  return (e = window == null ? void 0 : window.Telegram) == null ? void 0 : e.WebApp;
}
function Ae(e) {
  te() && de(e);
}
function ve(e) {
  te() && fe(e);
}
const p = (e, t, n = { manual: !1 }) => {
  const { manual: o } = n, s = b(), r = () => s.onEvent(e, t), i = () => s.offEvent(e, t);
  return o ? r() : (Ae(r), ve(i)), {
    off: i
  };
};
function H(e, t) {
  return p("activated", e, t);
}
function $(e, t) {
  return p("deactivated", e, t);
}
function j(e, t) {
  return p("themeChanged", e, t);
}
function Q(e, t) {
  return p("viewportChanged", e, t);
}
function me(e, t) {
  return p("safeAreaChanged", e, t);
}
function ge(e, t) {
  return p("contentSafeAreaChanged", e, t);
}
function he(e, t) {
  return p("mainButtonClicked", e, t);
}
function be(e, t) {
  return p("secondaryButtonClicked", e, t);
}
function we(e, t) {
  return p("backButtonClicked", e, t);
}
function Ce(e, t) {
  return p("settingsButtonClicked", e, t);
}
function Be(e, t) {
  return p("invoiceClosed", e, t);
}
function ye(e, t) {
  return p("popupClosed", e, t);
}
function Ve(e, t) {
  return p("qrTextReceived", e, t);
}
function Me(e, t) {
  return p("scanQrPopupClosed", e, t);
}
function Ie(e, t) {
  return p("clipboardTextReceived", e, t);
}
function Le(e, t) {
  return p("writeAccessRequested", e, t);
}
function Re(e, t) {
  return p("contactRequested", e, t);
}
function U(e, t) {
  return p("biometricManagerUpdated", e, t);
}
function z(e, t) {
  return p("biometricAuthRequested", e, t);
}
function W(e, t) {
  return p("biometricTokenUpdated", e, t);
}
function xe(e, t) {
  return p("fullscreenChanged", e, t);
}
function Ee(e, t) {
  return p("fullscreenFailed", e, t);
}
function Pe(e, t) {
  return p("homeScreenAdded", e, t);
}
function ke(e, t) {
  return p("homeScreenChecked", e, t);
}
function qe(e, t) {
  return p("accelerometerStarted", e, t);
}
function Fe(e, t) {
  return p("accelerometerStopped", e, t);
}
function K(e, t) {
  return p("accelerometerChanged", e, t);
}
function _(e, t) {
  return p("accelerometerFailed", e, t);
}
function De(e, t) {
  return p("deviceOrientationStarted", e, t);
}
function Oe(e, t) {
  return p("deviceOrientationStopped", e, t);
}
function N(e, t) {
  return p("deviceOrientationChanged", e, t);
}
function J(e, t) {
  return p("deviceOrientationFailed", e, t);
}
function Te(e, t) {
  return p("gyroscopeStarted", e, t);
}
function Ge(e, t) {
  return p("gyroscopeStopped", e, t);
}
function X(e, t) {
  return p("gyroscopeChanged", e, t);
}
function Y(e, t) {
  return p("gyroscopeFailed", e, t);
}
function Z(e, t) {
  return p("locationManagerUpdated", e, t);
}
function ee(e, t) {
  return p("locationRequested", e, t);
}
function He(e, t) {
  return p("shareMessageSent", e, t);
}
function $e(e, t) {
  return p("shareMessageFailed", e, t);
}
function je(e, t) {
  return p("emojiStatusSet", e, t);
}
function Qe(e, t) {
  return p("emojiStatusFailed", e, t);
}
function Ue(e, t) {
  return p("emojiStatusAccessRequested", e, t);
}
function ze(e, t) {
  return p("fileDownloadRequested", e, t);
}
function d(e, t) {
  return (...n) => {
    const { hooks: o, omitReturn: s } = t || {};
    o != null && o.before && o.before(n);
    const r = e(...n);
    if (o != null && o.after && o.after(n, r), !s)
      return r;
  };
}
function w(e) {
  return (...t) => new Promise((n) => e(...t, n));
}
function R(e) {
  return (...t) => new Promise((n) => e(...t, n));
}
function V(e) {
  return (...t) => new Promise(
    (n, o) => e(...t, (s, r) => s ? o(s) : n(r))
  );
}
function We(e, t) {
  return (...n) => new Promise(
    (o) => e(...n, (...s) => o(t(...s)))
  );
}
function C(e) {
  let t = !1, n;
  return function() {
    return t || (Se(!0).run(() => {
      n = e();
    }), t = !0), n;
  };
}
function ne(e, t) {
  const n = (e || "").trim().split(".").map(Number), o = (t || "").trim().split(".").map(Number), s = Math.max(n.length, o.length);
  for (let r = 0; r < s; r++) {
    const i = n[r] || 0, a = o[r] || 0;
    if (i !== a)
      return i > a ? 1 : -1;
  }
  return 0;
}
function g(e, t) {
  return ne(e, t) >= 0;
}
function B(e, t) {
  return ne(e, t) >= 0 ? e : t;
}
const oe = C(() => ({
  webApp: b()
}));
function Ke() {
  const {
    webApp: e
  } = oe(), t = w(e.showConfirm);
  function n(a, S) {
    if (S)
      e.showConfirm(a, S);
    else
      return t(a);
  }
  const o = R(e.showAlert);
  function s(a, S) {
    if (S)
      e.showAlert(a, S);
    else
      return o(a);
  }
  const r = w(e.showPopup);
  function i(a, S) {
    if (S)
      e.showPopup(a, S);
    else
      return r(a);
  }
  return {
    showConfirm: n,
    showAlert: s,
    showPopup: i,
    onClose: ye
  };
}
function Ot(e) {
  const { webApp: t } = oe(), n = B(e, t.version);
  return {
    version: t.version,
    isVersionAtLeast: t.isVersionAtLeast,
    ...g(n, "6.2") && Ke()
  };
}
const x = C(() => {
  const e = b(), t = c(e.BackButton.isVisible);
  return {
    webApp: e,
    isVisible: t,
    updateState: () => {
      t.value = e.BackButton.isVisible;
    }
  };
});
function _e() {
  const {
    isVisible: e
  } = x();
  return {
    isVisible: u(e)
  };
}
function Ne() {
  const {
    webApp: e,
    isVisible: t,
    updateState: n
  } = x(), o = d(e.BackButton.show, {
    hooks: {
      after: n
    },
    omitReturn: !0
  }), s = d(e.BackButton.hide, {
    hooks: {
      after: n
    },
    omitReturn: !0
  });
  return {
    isVisible: h({
      get() {
        return t.value;
      },
      set(r) {
        r ? o() : s();
      }
    }),
    show: o,
    hide: s,
    onClick: we
  };
}
function Tt(e) {
  const { webApp: t } = x(), n = B(e, t.version);
  return {
    version: t.version,
    isVersionAtLeast: t.isVersionAtLeast,
    ..._e(),
    ...g(n, "6.1") && Ne()
  };
}
const E = C(() => {
  const e = b(), t = c(e.BiometricManager.isInited), n = c(e.BiometricManager.isBiometricAvailable), o = c(e.BiometricManager.biometricType), s = c(e.BiometricManager.isAccessRequested), r = c(e.BiometricManager.isAccessGranted), i = c(e.BiometricManager.isBiometricTokenSaved), a = c(e.BiometricManager.deviceId);
  return {
    webApp: e,
    updateState: () => {
      t.value = e.BiometricManager.isInited, n.value = e.BiometricManager.isBiometricAvailable, o.value = e.BiometricManager.biometricType, s.value = e.BiometricManager.isAccessRequested, r.value = e.BiometricManager.isAccessGranted, i.value = e.BiometricManager.isBiometricTokenSaved, a.value = e.BiometricManager.deviceId;
    },
    isInited: t,
    isBiometricAvailable: n,
    biometricType: o,
    isAccessRequested: s,
    isAccessGranted: r,
    isBiometricTokenSaved: i,
    deviceId: a
  };
});
function Je() {
  const {
    isInited: e,
    isBiometricAvailable: t,
    biometricType: n,
    isAccessRequested: o,
    isAccessGranted: s,
    isBiometricTokenSaved: r,
    deviceId: i
  } = E();
  return {
    isInited: u(e),
    isBiometricAvailable: u(t),
    biometricType: u(n),
    isAccessRequested: u(o),
    isAccessGranted: u(s),
    isBiometricTokenSaved: u(r),
    deviceId: u(i)
  };
}
function Xe() {
  const {
    webApp: e,
    updateState: t
  } = E(), n = R(e.BiometricManager.init);
  function o(m) {
    if (m)
      e.BiometricManager.init(m);
    else
      return n();
  }
  const s = w(e.BiometricManager.requestAccess);
  function r(m, l) {
    if (l)
      e.BiometricManager.requestAccess(m, l);
    else
      return s(m);
  }
  const i = We(
    e.BiometricManager.authenticate,
    (m, l) => ({ isAuthenticated: m, token: l })
  );
  function a(m, l) {
    if (l)
      e.BiometricManager.authenticate(m, l);
    else
      return i(m);
  }
  const S = w(e.BiometricManager.updateBiometricToken);
  function v(m, l) {
    if (l)
      e.BiometricManager.updateBiometricToken(m, l);
    else
      return S(m);
  }
  return U(t), z(t), W(t), {
    init: o,
    requestAccess: r,
    authenticate: a,
    updateToken: v,
    openSettings: d(e.BiometricManager.openSettings, {
      omitReturn: !0
    }),
    onManagerUpdate: U,
    onAuthRequest: z,
    onTokenUpdate: W
  };
}
function Gt(e) {
  const { webApp: t } = E(), n = B(e, t.version);
  return {
    version: t.version,
    isVersionAtLeast: t.isVersionAtLeast,
    ...Je(),
    ...g(n, "7.2") && Xe()
  };
}
const M = C(() => {
  const e = b(), t = c(!1), n = c(e.isClosingConfirmationEnabled), o = c(e.isActive);
  return {
    webApp: e,
    updateState: () => {
      o.value = e.isActive, n.value = e.isClosingConfirmationEnabled;
    },
    isReady: t,
    isActive: o,
    isClosingConfirmationEnabled: n
  };
});
function Ye() {
  const {
    webApp: e,
    isReady: t,
    isActive: n,
    isClosingConfirmationEnabled: o
  } = M();
  return {
    initData: e.initData,
    initDataUnsafe: e.initDataUnsafe,
    platform: e.platform,
    sendData: e.sendData,
    openLink: e.openLink,
    openTelegramLink: e.openTelegramLink,
    ready: d(e.ready, {
      hooks: {
        after: () => {
          t.value = !0;
        }
      }
    }),
    close: e.close,
    isClosingConfirmationEnabled: u(o),
    isActive: u(n),
    isReady: u(t),
    isPlatform: it
  };
}
function Ze() {
  const { webApp: e } = M(), t = w(e.openInvoice);
  function n(o, s) {
    if (s)
      e.openInvoice(o, s);
    else
      return t(o);
  }
  return {
    openInvoice: n,
    onInvoiceClose: Be
  };
}
function et() {
  const {
    webApp: e,
    updateState: t,
    isClosingConfirmationEnabled: n
  } = M(), o = d(e.enableClosingConfirmation, {
    hooks: {
      after: t
    }
  }), s = d(e.disableClosingConfirmation, {
    hooks: {
      after: t
    }
  });
  return {
    isClosingConfirmationEnabled: h({
      get() {
        return n.value;
      },
      set(r) {
        r ? o() : s();
      }
    })
  };
}
function tt() {
  const { webApp: e } = M();
  return {
    switchInlineQuery: e.switchInlineQuery
  };
}
function nt() {
  const { webApp: e } = M(), t = w(e.requestContact);
  function n(r) {
    if (r)
      e.requestContact(r);
    else
      return t();
  }
  const o = w(e.requestWriteAccess);
  function s(r) {
    if (r)
      e.requestWriteAccess(r);
    else
      return o();
  }
  return {
    requestContact: n,
    requestWriteAccess: s,
    onContactRequest: Re,
    onWriteAccessRequest: Le
  };
}
function ot() {
  const { webApp: e } = M();
  return {
    shareToStory: e.shareToStory
  };
}
function st() {
  const {
    webApp: e,
    updateState: t
  } = M(), n = w(e.shareMessage);
  function o(i, a) {
    if (a)
      e.shareMessage(i, a);
    else
      return n(i);
  }
  const s = w(e.downloadFile);
  function r(i, a) {
    if (a)
      e.downloadFile(i, a);
    else
      return s(i);
  }
  return H(t), $(t), {
    shareMessage: o,
    downloadFile: r,
    onActive: H,
    onDeactive: $,
    onShareMessageSent: He,
    onShareMessageFail: $e,
    onFileDownloadRequest: ze
  };
}
function rt() {
  const { webApp: e } = M();
  return {
    hideKeyboard: e.hideKeyboard
  };
}
function Ht(e) {
  const { webApp: t } = M(), n = B(e, t.version);
  return {
    version: t.version,
    isVersionAtLeast: t.isVersionAtLeast,
    ...Ye(),
    ...g(n, "6.1") && Ze(),
    ...g(n, "6.2") && et(),
    ...g(n, "6.7") && tt(),
    ...g(n, "6.9") && nt(),
    ...g(n, "7.8") && ot(),
    ...g(n, "8.0") && st(),
    ...g(n, "9.1") && rt()
  };
}
function $t(e) {
  return g(e, b().version);
}
function it(e) {
  return b().platform === e;
}
const I = C(() => {
  const e = b(), t = c(e.isExpanded), n = c(e.viewportHeight), o = c(e.viewportStableHeight), s = c(e.isFullscreen), r = c(e.isOrientationLocked), i = c(e.isVerticalSwipesEnabled), a = c(e.safeAreaInset), S = c(e.contentSafeAreaInset);
  return {
    webApp: e,
    updateState: () => {
      t.value = e.isExpanded, n.value = e.viewportHeight, o.value = e.viewportStableHeight, s.value = e.isFullscreen, r.value = e.isOrientationLocked, i.value = e.isVerticalSwipesEnabled, a.value = {
        ...e.safeAreaInset
      }, S.value = {
        ...e.contentSafeAreaInset
      };
    },
    isExpanded: t,
    viewportHeight: n,
    viewportStableHeight: o,
    isFullscreen: s,
    isOrientationLocked: r,
    isVerticalSwipesEnabled: i,
    safeAreaInset: a,
    contentSafeAreaInset: S
  };
});
function at() {
  const {
    webApp: e,
    updateState: t,
    isExpanded: n,
    viewportHeight: o,
    viewportStableHeight: s,
    isFullscreen: r,
    isOrientationLocked: i,
    isVerticalSwipesEnabled: a,
    safeAreaInset: S,
    contentSafeAreaInset: v
  } = I();
  return Q(t), {
    expand: d(e.expand, {
      hooks: {
        after: t
      }
    }),
    isExpanded: u(n),
    viewportHeight: u(o),
    viewportStableHeight: u(s),
    isFullscreen: u(r),
    isOrientationLocked: u(i),
    isVerticalSwipesEnabled: u(a),
    safeAreaInset: u(S),
    contentSafeAreaInset: u(v),
    onChange: Q
  };
}
function ct() {
  const {
    webApp: e,
    isVerticalSwipesEnabled: t,
    updateState: n
  } = I(), o = d(e.enableVerticalSwipes, {
    hooks: {
      after: n
    }
  }), s = d(e.disableVerticalSwipes, {
    hooks: {
      after: n
    }
  });
  return {
    isVerticalSwipesEnabled: h({
      get() {
        return t.value;
      },
      set(r) {
        r ? o() : s();
      }
    })
  };
}
function ut() {
  const {
    webApp: e,
    isFullscreen: t,
    isOrientationLocked: n,
    updateState: o
  } = I(), s = d(e.requestFullscreen, {
    hooks: {
      after: o
    }
  }), r = d(e.exitFullscreen, {
    hooks: {
      after: o
    }
  }), i = d(e.lockOrientation, {
    hooks: {
      after: o
    }
  }), a = d(e.unlockOrientation, {
    hooks: {
      after: o
    }
  });
  return {
    isFullscreen: h({
      get() {
        return t.value;
      },
      set(S) {
        S ? s() : r();
      }
    }),
    isOrientationLocked: h({
      get() {
        return n.value;
      },
      set(S) {
        S ? i() : a();
      }
    }),
    onSafeAreaChange: me,
    onContentSafeAreaChange: ge,
    onFullscreenChange: xe,
    onFullscreenFail: Ee
  };
}
function jt(e) {
  const { webApp: t } = I(), n = B(e, t.version);
  return {
    version: t.version,
    isVersionAtLeast: t.isVersionAtLeast,
    ...at(),
    ...g(n, "7.7") && ct(),
    ...g(n, "8.0") && ut()
  };
}
const P = C(() => {
  const e = b(), t = c(e.MainButton.text), n = c(e.MainButton.color), o = c(e.MainButton.textColor), s = c(e.MainButton.isVisible), r = c(e.MainButton.isActive), i = c(e.MainButton.isProgressVisible), a = c(e.MainButton.hasShineEffect);
  return {
    webApp: e,
    updateState: () => {
      t.value = e.MainButton.text, n.value = e.MainButton.color, o.value = e.MainButton.textColor, s.value = e.MainButton.isVisible, r.value = e.MainButton.isActive, i.value = e.MainButton.isProgressVisible, a.value = e.MainButton.hasShineEffect;
    },
    text: t,
    color: n,
    textColor: o,
    isVisible: s,
    isActive: r,
    isProgressVisible: i,
    hasShineEffect: a
  };
});
function pt() {
  const {
    webApp: e,
    updateState: t,
    text: n,
    color: o,
    textColor: s,
    isVisible: r,
    isActive: i,
    isProgressVisible: a,
    hasShineEffect: S
  } = P(), v = d(e.MainButton.showProgress, {
    hooks: {
      after: t
    },
    omitReturn: !0
  }), m = d(e.MainButton.hideProgress, {
    hooks: {
      after: t
    },
    omitReturn: !0
  }), l = d(e.MainButton.setParams, {
    hooks: {
      after: t
    },
    omitReturn: !0
  });
  return {
    text: h({
      get() {
        return n.value;
      },
      set(A) {
        l({ text: A });
      }
    }),
    color: h({
      get() {
        return o.value;
      },
      set(A) {
        l({ color: A });
      }
    }),
    textColor: h({
      get() {
        return s.value;
      },
      set(A) {
        l({ text_color: A });
      }
    }),
    isVisible: h({
      get() {
        return r.value;
      },
      set(A) {
        l({ is_visible: A });
      }
    }),
    isActive: h({
      get() {
        return i.value;
      },
      set(A) {
        l({ is_active: A });
      }
    }),
    isProgressVisible: h({
      get() {
        return a.value;
      },
      set(A) {
        A ? v() : m();
      }
    }),
    hasShineEffect: u(S),
    show: d(e.MainButton.show, {
      hooks: {
        after: t
      },
      omitReturn: !0
    }),
    hide: d(e.MainButton.hide, {
      hooks: {
        after: t
      },
      omitReturn: !0
    }),
    enable: d(e.MainButton.enable, {
      hooks: {
        after: t
      },
      omitReturn: !0
    }),
    disable: d(e.MainButton.disable, {
      hooks: {
        after: t
      },
      omitReturn: !0
    }),
    showProgress: v,
    hideProgress: m,
    setParams: l,
    onClick: he
  };
}
function lt() {
  const {
    webApp: e,
    updateState: t,
    hasShineEffect: n
  } = P(), o = d(e.MainButton.setParams, {
    hooks: {
      after: t
    },
    omitReturn: !0
  });
  return {
    hasShineEffect: h({
      get() {
        return n.value;
      },
      set(s) {
        o({ has_shine_effect: s });
      }
    })
  };
}
function Qt(e) {
  const { webApp: t } = P(), n = B(e, t.version);
  return {
    version: t.version,
    isVersionAtLeast: t.isVersionAtLeast,
    ...pt(),
    ...g(n, "7.10") && lt()
  };
}
const se = C(() => ({
  webApp: b()
}));
function dt() {
  const {
    webApp: e
  } = se(), t = w(e.showScanQrPopup);
  function n(o, s) {
    if (s)
      e.showScanQrPopup(o, s);
    else
      return t(o);
  }
  return {
    show: n,
    close: e.closeScanQrPopup,
    onScan: Ve
  };
}
function ft() {
  return {
    onClose: Me
  };
}
function Ut(e) {
  const { webApp: t } = se(), n = B(e, t.version);
  return {
    version: t.version,
    isVersionAtLeast: t.isVersionAtLeast,
    ...g(n, "6.4") && dt(),
    ...g(n, "7.7") && ft()
  };
}
const k = C(() => {
  const e = b(), t = c(e.SecondaryButton.text), n = c(e.SecondaryButton.color), o = c(e.SecondaryButton.textColor), s = c(e.SecondaryButton.isVisible), r = c(e.SecondaryButton.isActive), i = c(e.SecondaryButton.isProgressVisible), a = c(e.SecondaryButton.hasShineEffect), S = c(e.SecondaryButton.position);
  return {
    webApp: e,
    updateState: () => {
      t.value = e.SecondaryButton.text, n.value = e.SecondaryButton.color, o.value = e.SecondaryButton.textColor, s.value = e.SecondaryButton.isVisible, r.value = e.SecondaryButton.isActive, i.value = e.SecondaryButton.isProgressVisible, a.value = e.SecondaryButton.hasShineEffect, S.value = e.SecondaryButton.position;
    },
    text: t,
    color: n,
    textColor: o,
    isVisible: s,
    isActive: r,
    isProgressVisible: i,
    hasShineEffect: a,
    position: S
  };
});
function St() {
  const {
    text: e,
    color: t,
    textColor: n,
    isVisible: o,
    isActive: s,
    isProgressVisible: r,
    hasShineEffect: i,
    position: a
  } = k();
  return {
    text: u(e),
    color: u(t),
    textColor: u(n),
    isVisible: u(o),
    isActive: u(s),
    isProgressVisible: u(r),
    hasShineEffect: u(i),
    position: u(a)
  };
}
function At() {
  const {
    webApp: e,
    text: t,
    color: n,
    textColor: o,
    isVisible: s,
    isActive: r,
    isProgressVisible: i,
    hasShineEffect: a,
    position: S,
    updateState: v
  } = k(), m = d(e.SecondaryButton.showProgress, {
    hooks: {
      after: v
    },
    omitReturn: !0
  }), l = d(e.SecondaryButton.hideProgress, {
    hooks: {
      after: v
    },
    omitReturn: !0
  }), A = d(e.SecondaryButton.setParams, {
    hooks: {
      after: v
    },
    omitReturn: !0
  });
  return {
    text: h({
      get() {
        return t.value;
      },
      set(f) {
        A({ text: f });
      }
    }),
    color: h({
      get() {
        return n.value;
      },
      set(f) {
        A({ color: f });
      }
    }),
    textColor: h({
      get() {
        return o.value;
      },
      set(f) {
        A({ text_color: f });
      }
    }),
    isVisible: h({
      get() {
        return s.value;
      },
      set(f) {
        A({ is_visible: f });
      }
    }),
    isActive: h({
      get() {
        return r.value;
      },
      set(f) {
        A({ is_active: f });
      }
    }),
    isProgressVisible: h({
      get() {
        return i.value;
      },
      set(f) {
        f ? m() : l();
      }
    }),
    hasShineEffect: h({
      get() {
        return a.value;
      },
      set(f) {
        A({ has_shine_effect: f });
      }
    }),
    position: h({
      get() {
        return S.value;
      },
      set(f) {
        A({ position: f });
      }
    }),
    show: d(e.SecondaryButton.show, {
      hooks: {
        after: v
      },
      omitReturn: !0
    }),
    hide: d(e.SecondaryButton.hide, {
      hooks: {
        after: v
      },
      omitReturn: !0
    }),
    enable: d(e.SecondaryButton.enable, {
      hooks: {
        after: v
      },
      omitReturn: !0
    }),
    disable: d(e.SecondaryButton.disable, {
      hooks: {
        after: v
      },
      omitReturn: !0
    }),
    showProgress: m,
    hideProgress: l,
    setParams: A,
    onClick: be
  };
}
function zt(e) {
  const { webApp: t } = k(), n = B(e, t.version);
  return {
    version: t.version,
    isVersionAtLeast: t.isVersionAtLeast,
    ...St(),
    ...g(n, "7.10") && At()
  };
}
const q = C(() => {
  const e = b(), t = c(e.SettingsButton.isVisible);
  return {
    webApp: e,
    isVisible: t,
    updateState: () => {
      t.value = e.SettingsButton.isVisible;
    }
  };
});
function vt() {
  const {
    isVisible: e
  } = q();
  return {
    isVisible: u(e)
  };
}
function mt() {
  const {
    webApp: e,
    isVisible: t,
    updateState: n
  } = q(), o = d(e.SettingsButton.show, {
    hooks: {
      after: n
    },
    omitReturn: !0
  }), s = d(e.SettingsButton.hide, {
    hooks: {
      after: n
    },
    omitReturn: !0
  });
  return {
    isVisible: h({
      get() {
        return t.value;
      },
      set(r) {
        r ? o() : s();
      }
    }),
    show: o,
    hide: s,
    onClick: Ce
  };
}
function Wt(e) {
  const { webApp: t } = q(), n = B(e, t.version);
  return {
    version: t.version,
    isVersionAtLeast: t.isVersionAtLeast,
    ...vt(),
    ...g(n, "7.0") && mt()
  };
}
const re = C(() => ({
  webApp: b()
}));
function gt() {
  const {
    webApp: e
  } = re(), t = w(e.readTextFromClipboard);
  function n(o) {
    if (o)
      e.readTextFromClipboard(o);
    else
      return t();
  }
  return {
    readText: n,
    onReadText: Ie
  };
}
function Kt(e) {
  const { webApp: t } = re(), n = B(e, t.version);
  return {
    version: t.version,
    isVersionAtLeast: t.isVersionAtLeast,
    ...g(n, "6.4") && gt()
  };
}
const ie = C(() => ({
  webApp: b()
}));
function ht() {
  const {
    webApp: e
  } = ie(), t = V(e.CloudStorage.setItem);
  function n(f, y, G) {
    if (G)
      e.CloudStorage.setItem(f, y, G);
    else
      return t(f, y);
  }
  const o = V(e.CloudStorage.getItem);
  function s(f, y) {
    if (y)
      e.CloudStorage.getItem(f, y);
    else
      return o(f);
  }
  const r = V(e.CloudStorage.getItems);
  function i(f, y) {
    if (y)
      e.CloudStorage.getItems(f, y);
    else
      return r(f);
  }
  const a = V(e.CloudStorage.removeItem);
  function S(f, y) {
    if (y)
      e.CloudStorage.removeItem(f, y);
    else
      return a(f);
  }
  const v = V(e.CloudStorage.removeItems);
  function m(f, y) {
    if (y)
      e.CloudStorage.removeItems(f, y);
    else
      return v(f);
  }
  const l = V(e.CloudStorage.getKeys);
  function A(f) {
    if (f)
      e.CloudStorage.getKeys(f);
    else
      return l();
  }
  return {
    setItem: n,
    getItem: s,
    getItems: i,
    removeItem: S,
    removeItems: m,
    getKeys: A
  };
}
function _t(e) {
  const { webApp: t } = ie(), n = B(e, t.version);
  return {
    version: t.version,
    isVersionAtLeast: t.isVersionAtLeast,
    ...g(n, "6.9") && ht()
  };
}
const ae = C(() => ({
  webApp: b()
}));
function bt() {
  const {
    webApp: e
  } = ae(), t = d(e.HapticFeedback.impactOccurred, {
    omitReturn: !0
  }), n = d(e.HapticFeedback.notificationOccurred, {
    omitReturn: !0
  }), o = d(e.HapticFeedback.selectionChanged, {
    omitReturn: !0
  });
  return {
    impactOccurred: t,
    notificationOccurred: n,
    selectionChanged: o
  };
}
function Nt(e) {
  const { webApp: t } = ae(), n = B(e, t.version);
  return {
    version: t.version,
    isVersionAtLeast: t.isVersionAtLeast,
    ...g(n, "6.1") && bt()
  };
}
const L = C(() => {
  const e = b(), t = c(e.colorScheme), n = c(e.themeParams), o = c(e.headerColor), s = c(e.backgroundColor), r = c(e.bottomBarColor);
  return {
    webApp: e,
    updateState: () => {
      t.value = e.colorScheme, n.value = {
        ...e.themeParams
      }, o.value = e.headerColor, s.value = e.backgroundColor, r.value = e.bottomBarColor;
    },
    colorScheme: t,
    themeParams: n,
    headerColor: o,
    backgroundColor: s,
    bottomBarColor: r
  };
});
function wt() {
  const {
    colorScheme: e,
    themeParams: t,
    headerColor: n,
    backgroundColor: o,
    bottomBarColor: s,
    updateState: r
  } = L();
  return j(r), {
    colorScheme: u(e),
    themeParams: u(t),
    headerColor: u(n),
    backgroundColor: u(o),
    bottomBarColor: u(s),
    onChange: j
  };
}
function Ct() {
  const {
    webApp: e,
    headerColor: t,
    backgroundColor: n,
    updateState: o
  } = L(), s = d(e.setHeaderColor, {
    hooks: {
      after: o
    }
  }), r = d(e.setBackgroundColor, {
    hooks: {
      after: o
    }
  });
  return {
    headerColor: h({
      get() {
        return t.value;
      },
      set(i) {
        s(i);
      }
    }),
    backgroundColor: h({
      get() {
        return n.value;
      },
      set(i) {
        r(i);
      }
    })
  };
}
function Bt() {
  const {
    webApp: e,
    bottomBarColor: t,
    updateState: n
  } = L(), o = d(e.setBottomBarColor, {
    hooks: {
      after: n
    }
  });
  return {
    bottomBarColor: h({
      get() {
        return t.value;
      },
      set(s) {
        o(s);
      }
    })
  };
}
function Jt(e) {
  const { webApp: t } = L(), n = B(e, t.version);
  return {
    version: t.version,
    isVersionAtLeast: t.isVersionAtLeast,
    ...wt(),
    ...g(n, "6.1") && Ct(),
    ...g(n, "7.10") && Bt()
  };
}
const F = C(() => {
  const e = b(), t = c(e.Accelerometer.isStarted), n = c(e.Accelerometer.x), o = c(e.Accelerometer.y), s = c(e.Accelerometer.z);
  return {
    webApp: e,
    updateState: () => {
      t.value = e.Accelerometer.isStarted, n.value = e.Accelerometer.x, o.value = e.Accelerometer.y, s.value = e.Accelerometer.z;
    },
    isStarted: t,
    x: n,
    y: o,
    z: s
  };
});
function yt() {
  const {
    isStarted: e,
    x: t,
    y: n,
    z: o
  } = F();
  return {
    isStarted: u(e),
    x: u(t),
    y: u(n),
    z: u(o)
  };
}
function Vt() {
  const {
    webApp: e,
    updateState: t
  } = F(), n = w(e.Accelerometer.start);
  function o(i, a) {
    if (a)
      e.Accelerometer.start(i, a);
    else
      return n(i);
  }
  const s = w(e.Accelerometer.stop);
  function r(i) {
    if (i)
      e.Accelerometer.stop(i);
    else
      return s();
  }
  return K(t), _(t), {
    start: o,
    stop: r,
    onStart: qe,
    onStop: Fe,
    onChange: K,
    onFail: _
  };
}
function Xt(e) {
  const { webApp: t } = F(), n = B(e, t.version);
  return {
    version: t.version,
    isVersionAtLeast: t.isVersionAtLeast,
    ...yt(),
    ...g(n, "8.0") && Vt()
  };
}
const D = C(() => {
  const e = b(), t = c(e.DeviceOrientation.isStarted), n = c(e.DeviceOrientation.absolute), o = c(e.DeviceOrientation.alpha), s = c(e.DeviceOrientation.beta), r = c(e.DeviceOrientation.gamma);
  return {
    webApp: e,
    updateState: () => {
      t.value = e.DeviceOrientation.isStarted, n.value = e.DeviceOrientation.absolute, o.value = e.DeviceOrientation.alpha, s.value = e.DeviceOrientation.beta, r.value = e.DeviceOrientation.gamma;
    },
    isStarted: t,
    absolute: n,
    alpha: o,
    beta: s,
    gamma: r
  };
});
function Mt() {
  const {
    isStarted: e,
    absolute: t,
    alpha: n,
    beta: o,
    gamma: s
  } = D();
  return {
    isStarted: u(e),
    absolute: u(t),
    alpha: u(n),
    beta: u(o),
    gamma: u(s)
  };
}
function It() {
  const {
    webApp: e,
    updateState: t
  } = D(), n = w(e.DeviceOrientation.start);
  function o(i, a) {
    if (a)
      e.DeviceOrientation.start(i, a);
    else
      return n(i);
  }
  const s = w(e.DeviceOrientation.stop);
  function r(i) {
    if (i)
      e.DeviceOrientation.stop(i);
    else
      return s();
  }
  return N(t), J(t), {
    start: o,
    stop: r,
    onStart: De,
    onStop: Oe,
    onChange: N,
    onFail: J
  };
}
function Yt(e) {
  const { webApp: t } = D(), n = B(e, t.version);
  return {
    version: t.version,
    isVersionAtLeast: t.isVersionAtLeast,
    ...Mt(),
    ...g(n, "8.0") && It()
  };
}
const ce = C(() => ({
  webApp: b()
}));
function Lt() {
  const {
    webApp: e
  } = ce(), t = V(e.DeviceStorage.setItem);
  function n(v, m, l) {
    if (l)
      e.DeviceStorage.setItem(v, m, l);
    else
      return t(v, m);
  }
  const o = V(e.DeviceStorage.getItem);
  function s(v, m) {
    if (m)
      e.DeviceStorage.getItem(v, m);
    else
      return o(v);
  }
  const r = V(e.DeviceStorage.removeItem);
  function i(v, m) {
    if (m)
      e.DeviceStorage.removeItem(v, m);
    else
      return r(v);
  }
  const a = w(e.DeviceStorage.clear);
  function S(v) {
    if (v)
      e.DeviceStorage.clear(v);
    else
      return a();
  }
  return {
    setItem: n,
    getItem: s,
    removeItem: i,
    clear: S
  };
}
function Zt(e) {
  const { webApp: t } = ce(), n = B(e, t.version);
  return {
    version: t.version,
    isVersionAtLeast: t.isVersionAtLeast,
    ...g(n, "9.0") && Lt()
  };
}
const ue = C(() => ({
  webApp: b()
}));
function Rt() {
  const {
    webApp: e
  } = ue(), t = w(e.setEmojiStatus);
  function n(r, i, a) {
    if (a)
      e.setEmojiStatus(r, i, a);
    else
      return t(r, i);
  }
  const o = w(e.requestEmojiStatusAccess);
  function s(r) {
    if (r)
      e.requestEmojiStatusAccess(r);
    else
      return o();
  }
  return {
    set: n,
    requestAccess: s,
    onSet: je,
    onFail: Qe,
    onAccessRequest: Ue
  };
}
function en(e) {
  const { webApp: t } = ue(), n = B(e, t.version);
  return {
    version: t.version,
    isVersionAtLeast: t.isVersionAtLeast,
    ...g(n, "8.0") && Rt()
  };
}
const O = C(() => {
  const e = b(), t = c(e.Gyroscope.isStarted), n = c(e.Gyroscope.x), o = c(e.Gyroscope.y), s = c(e.Gyroscope.z);
  return {
    webApp: e,
    updateState: () => {
      t.value = e.Gyroscope.isStarted, n.value = e.Gyroscope.x, o.value = e.Gyroscope.y, s.value = e.Gyroscope.z;
    },
    isStarted: t,
    x: n,
    y: o,
    z: s
  };
});
function xt() {
  const {
    isStarted: e,
    x: t,
    y: n,
    z: o
  } = O();
  return {
    isStarted: u(e),
    x: u(t),
    y: u(n),
    z: u(o)
  };
}
function Et() {
  const {
    webApp: e,
    updateState: t
  } = O(), n = w(e.Gyroscope.start);
  function o(i, a) {
    if (a)
      e.Gyroscope.start(i, a);
    else
      return n(i);
  }
  const s = w(e.Gyroscope.stop);
  function r(i) {
    if (i)
      e.Gyroscope.stop(i);
    else
      return s();
  }
  return X(t), Y(t), {
    start: o,
    stop: r,
    onStart: Te,
    onStop: Ge,
    onChange: X,
    onFail: Y
  };
}
function tn(e) {
  const { webApp: t } = O(), n = B(e, t.version);
  return {
    version: t.version,
    isVersionAtLeast: t.isVersionAtLeast,
    ...xt(),
    ...g(n, "8.0") && Et()
  };
}
const pe = C(() => ({
  webApp: b()
}));
function Pt() {
  const {
    webApp: e
  } = pe(), t = w(e.checkHomeScreenStatus);
  function n(o) {
    if (o)
      e.checkHomeScreenStatus(o);
    else
      return t();
  }
  return {
    addShortcut: e.addToHomeScreen,
    checkShortcutStatus: n,
    onShortcutAdd: Pe,
    onShortcutCheck: ke
  };
}
function nn(e) {
  const { webApp: t } = pe(), n = B(e, t.version);
  return {
    version: t.version,
    isVersionAtLeast: t.isVersionAtLeast,
    ...g(n, "8.0") && Pt()
  };
}
const T = C(() => {
  const e = b(), t = c(e.LocationManager.isInited), n = c(e.LocationManager.isLocationAvailable), o = c(e.LocationManager.isAccessRequested), s = c(e.LocationManager.isAccessGranted);
  return {
    webApp: e,
    updateState: () => {
      t.value = e.LocationManager.isInited, n.value = e.LocationManager.isLocationAvailable, o.value = e.LocationManager.isAccessRequested, s.value = e.LocationManager.isAccessGranted;
    },
    isInited: t,
    isLocationAvailable: n,
    isAccessRequested: o,
    isAccessGranted: s
  };
});
function kt() {
  const {
    isInited: e,
    isLocationAvailable: t,
    isAccessRequested: n,
    isAccessGranted: o
  } = T();
  return {
    isInited: u(e),
    isLocationAvailable: u(t),
    isAccessRequested: u(n),
    isAccessGranted: u(o)
  };
}
function qt() {
  const {
    webApp: e,
    updateState: t
  } = T(), n = R(e.LocationManager.init);
  function o(i) {
    if (i)
      e.LocationManager.init(i);
    else
      return n();
  }
  const s = w(e.LocationManager.getLocation);
  function r(i) {
    if (i)
      e.LocationManager.getLocation(i);
    else
      return s();
  }
  return Z(t), ee(t), {
    init: o,
    getLocation: r,
    openSettings: d(e.LocationManager.openSettings, {
      omitReturn: !0
    }),
    onManagerUpdate: Z,
    onRequest: ee
  };
}
function on(e) {
  const { webApp: t } = T(), n = B(e, t.version);
  return {
    version: t.version,
    isVersionAtLeast: t.isVersionAtLeast,
    ...kt(),
    ...g(n, "8.0") && qt()
  };
}
const le = C(() => ({
  webApp: b()
}));
function Ft() {
  const {
    webApp: e
  } = le(), t = V(e.SecureStorage.setItem);
  function n(l, A, f) {
    if (f)
      e.SecureStorage.setItem(l, A, f);
    else
      return t(l, A);
  }
  const o = V(e.SecureStorage.getItem);
  function s(l, A) {
    if (A)
      e.SecureStorage.getItem(l, A);
    else
      return o(l);
  }
  const r = V(e.SecureStorage.restoreItem);
  function i(l, A) {
    if (A)
      e.SecureStorage.restoreItem(l, A);
    else
      return r(l);
  }
  const a = V(e.SecureStorage.removeItem);
  function S(l, A) {
    if (A)
      e.SecureStorage.removeItem(l, A);
    else
      return a(l);
  }
  const v = w(e.SecureStorage.clear);
  function m(l) {
    if (l)
      e.SecureStorage.clear(l);
    else
      return v();
  }
  return {
    setItem: n,
    getItem: s,
    restoreItem: i,
    removeItem: S,
    clear: m
  };
}
function sn(e) {
  const { webApp: t } = le(), n = B(e, t.version);
  return {
    version: t.version,
    isVersionAtLeast: t.isVersionAtLeast,
    ...g(n, "9.0") && Ft()
  };
}
export {
  Oe as $,
  z as A,
  U as B,
  Ie as C,
  he as D,
  Be as E,
  ye as F,
  Me as G,
  Ve as H,
  Le as I,
  Re as J,
  Ce as K,
  j as L,
  $t as M,
  H as N,
  $ as O,
  me as P,
  ge as Q,
  be as R,
  xe as S,
  Ee as T,
  Pe as U,
  ke as V,
  qe as W,
  Fe as X,
  K as Y,
  _ as Z,
  De as _,
  Tt as a,
  N as a0,
  J as a1,
  Te as a2,
  Ge as a3,
  X as a4,
  Y as a5,
  Z as a6,
  ee as a7,
  He as a8,
  $e as a9,
  je as aa,
  Qe as ab,
  Ue as ac,
  ze as ad,
  Gt as b,
  Kt as c,
  _t as d,
  Yt as e,
  Zt as f,
  en as g,
  tn as h,
  Nt as i,
  nn as j,
  on as k,
  Qt as l,
  Ht as m,
  Ot as n,
  Ut as o,
  zt as p,
  sn as q,
  Wt as r,
  Jt as s,
  jt as t,
  Xt as u,
  Q as v,
  b as w,
  p as x,
  we as y,
  W as z
};
