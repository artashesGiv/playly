declare const featureSupportVersion: {
    ClosingConfirmation: string;
    CloudStorage: string;
    RequestWriteAccess: string;
    RequestContact: string;
    SettingsButton: string;
    BiometricManager: string;
    DisableVerticalSwipes: string;
};
declare function isFeatureSupported(name: keyof typeof featureSupportVersion): boolean;
/**
 * @deprecated Use [`useMiniApp`](https://vue-tg.deptyped.com/mini-apps.html#useminiapp) instead
 */
export declare function useWebApp(): {
    initData: string;
    initDataUnsafe: import('../sdk').WebAppInitData;
    version: "8.0" | "9.0" | "9.1";
    platform: string;
    isVersionAtLeast: (version: string) => boolean;
    sendData: (data: string) => void;
    ready: () => void;
    close: () => void;
    isReady: Readonly<import('vue').Ref<boolean, boolean>>;
    isPlatform: (name: (string & Record<never, never>) | "unknown" | "android" | "android_x" | "ios" | "macos" | "tdesktop" | "weba" | "webk" | "unigram") => boolean;
    isPlatformUnknown: boolean;
    isFeatureSupported: typeof isFeatureSupported;
    /**
     * @deprecated import directly from `vue-tg` instead.
     */
    onEvent: import('../types').OnEventWithOptions<import('../types').OnEventOptions>;
    /**
     * @deprecated
     */
    canSendData: boolean;
};
export {};
